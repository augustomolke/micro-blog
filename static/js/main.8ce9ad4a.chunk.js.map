{"version":3,"sources":["components/Navbar.js","components/Postlist.js","services/postService.js","components/useFetch.js","components/Home.js","components/Create.js","components/postDetails.js","App.js","index.js"],"names":["Navbar","className","to","Postlist","posts","map","p","id","title","author","body","Promise","res","err","setTimeout","newPost","rej","push","idx","filter","param","output","useFetch","useState","data","setData","isPending","setIsPending","error","setError","abortController","AbortController","fet","signal","postService","useEffect","then","message","Home","Create","handleCreate","setnewPost","hist","useHistory","onSubmit","e","preventDefault","type","required","value","onChange","target","PostDetails","useParams","onClick","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ce9ad4a.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>Micro Blog</h1>\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/create\">New Post</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\nconst Postlist = ({ posts }) => {\n  return (\n    <div className=\"blog-list\">\n      {posts.map((p) => (\n        <div className=\"blog-preview\" key={p.id}>\n          <Link to={`/post/${p.id}`}>\n            <h2>{p.title}</h2>\n            <p>Autor: {p.author}</p>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Postlist;\n","let posts = [\n  {\n    title: \"This is my first ReactJS project!\",\n    body: \"In this little project I did not use any DB, in order to make it simple and focused on my current study subject: React (Although it can easily be implemented if needed).A simulation of a real HTTP request was done with setTimeout\",\n    author: \"Otto\",\n    id: 2,\n  },\n  {\n    title: \"What can you do in this Micro-blog?\",\n    body: \"This little app allows you to list every post created, delete a post, read a post and create new posts.\",\n    author: \"Also Otto\",\n    id: 3,\n  },\n];\n\nconst createPost = (newPost) => {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      let idx = 3;\n      res(posts.push({ ...newPost, id: idx + 1 }));\n    }, 1000);\n  });\n};\n\nconst deletePost = (id) => {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      res((posts = posts.filter((p) => p.id != id)));\n    }, 1000);\n  });\n};\n\nconst getPostById = (param) => {\n  return new Promise((res, rej) => {\n    let output = posts.filter((p) => {\n      return p.id == param;\n    })[0];\n    setTimeout(() => {\n      res(output);\n    }, 1000);\n  });\n};\n\nconst getPosts = () => {\n  return new Promise((res, err) => {\n    setTimeout(() => {\n      res(posts);\n    }, 1000);\n  });\n};\n\nexport default {\n  getPosts,\n  createPost,\n  deletePost,\n  getPostById,\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport postService from \"../services/postService\";\n\nconst useFetch = (id = \"\") => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n  var fet = postService.getPosts;\n  if (id != \"\")\n    fet = () => {\n      return postService.getPostById(id);\n    };\n\n  useEffect(() => {\n    fet().then(\n      (res) => {\n        setIsPending(false);\n        setData(res);\n        setError(null);\n      },\n      (err) => {\n        setIsPending(false);\n        setError(err.message);\n      }\n    );\n  }, [id]);\n\n  return { data, isPending, error };\n};\nexport default useFetch;\n","import Postlist from \"./Postlist\";\nimport useFetch from \"./useFetch\";\n\nconst Home = () => {\n  const { data, error, isPending } = useFetch(); //\"http://localhost:8000/blogs\");\n\n  return (\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading...</div>}\n      {data && <Postlist posts={data} />}\n    </div>\n  );\n};\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport postService from \"../services/postService\";\n\nconst Create = ({ handleCreate }) => {\n  const [newPost, setnewPost] = useState({ title: \"\", body: \"\", author: \"\" });\n  const [ready, setReady] = useState(false);\n  const hist = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    postService.createPost(newPost).then((res) => {\n      hist.push(\"/\");\n    });\n  };\n  return (\n    <div className=\"create\">\n      <form onSubmit={handleSubmit}>\n        <label>Title</label>\n        <input\n          type=\"text\"\n          required\n          value={newPost.title}\n          onChange={(e) => {\n            setnewPost({ ...newPost, title: e.target.value });\n          }}\n        />\n        <label>Text</label>\n\n        <textarea\n          required\n          value={newPost.body}\n          onChange={(e) => {\n            setnewPost({ ...newPost, body: e.target.value });\n          }}\n        ></textarea>\n        <label>Author</label>\n\n        <input\n          type=\"text\"\n          required\n          value={newPost.author}\n          onChange={(e) => {\n            setnewPost({ ...newPost, author: e.target.value });\n          }}\n        />\n        <button>Add Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","import { useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../services/postService\";\n\nconst PostDetails = () => {\n  const { id } = useParams();\n  const hist = useHistory();\n  const { data, error, isPending } = useFetch(id);\n\n  const handleDelete = () => {\n    postService.deletePost(id);\n    hist.push(\"/\");\n  };\n  return (\n    <div className=\"postdetails\">\n      {isPending && <div>Pending...</div>}\n      {error && <div>error</div>}\n      {data && (\n        <article>\n          <h2>{data.title}</h2>\n          <p>Author: {data.author}</p>\n          <div>{data.body}</div>\n          <button onClick={handleDelete}>delete post</button>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default PostDetails;\n","import Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Create from \"./components/Create\";\nimport PostDetails from \"./components/postDetails\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/post/:id\">\n              <PostDetails />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}